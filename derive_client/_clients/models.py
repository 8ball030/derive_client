# generated by datamodel-codegen:
#   filename:  RESTAPI-v2_0-latest.json
#   timestamp: 2025-10-01T12:11:13+00:00

from __future__ import annotations

from dataclasses import dataclass
from decimal import Decimal
from enum import Enum
from typing import Any, Dict, List, Optional, Union


class Status(str, Enum):
    unseen = "unseen"
    seen = "seen"
    hidden = "hidden"


class TypeEnum(str, Enum):
    deposit = "deposit"
    withdraw = "withdraw"
    transfer = "transfer"
    trade = "trade"
    settlement = "settlement"
    liquidation = "liquidation"
    custom = "custom"


@dataclass
class PrivateGetNotificationsParamsSchema:
    page: Optional[int] = 1
    page_size: Optional[int] = 50
    status: Optional[Status] = None
    subaccount_id: Optional[int] = None
    type: Optional[List[TypeEnum]] = None
    wallet: Optional[str] = None


@dataclass
class NotificationResponseSchema:
    event: str
    event_details: Dict[str, Any]
    id: int
    status: str
    subaccount_id: int
    timestamp: int
    transaction_id: Optional[int] = None
    tx_hash: Optional[str] = None


@dataclass
class PaginationInfoSchema:
    count: int
    num_pages: int


@dataclass
class PublicGetCurrencyParamsSchema:
    currency: str


class InstrumentType(str, Enum):
    erc20 = "erc20"
    option = "option"
    perp = "perp"


class MarketType(str, Enum):
    ALL = "ALL"
    SRM_BASE_ONLY = "SRM_BASE_ONLY"
    SRM_OPTION_ONLY = "SRM_OPTION_ONLY"
    SRM_PERP_ONLY = "SRM_PERP_ONLY"
    CASH = "CASH"


@dataclass
class OpenInterestStatsSchema:
    current_open_interest: Decimal
    interest_cap: Decimal
    manager_currency: Optional[str] = None


class MarginType(str, Enum):
    PM = "PM"
    SM = "SM"
    PM2 = "PM2"


@dataclass
class ManagerContractResponseSchema:
    address: str
    margin_type: MarginType
    currency: Optional[str] = None


@dataclass
class PM2CollateralDiscountsSchema:
    im_discount: Decimal
    manager_currency: str
    mm_discount: Decimal


@dataclass
class ProtocolAssetAddressesSchema:
    option: Optional[str] = None
    perp: Optional[str] = None
    spot: Optional[str] = None
    underlying_erc20: Optional[str] = None


@dataclass
class PrivateSetMmpConfigParamsSchema:
    currency: str
    mmp_frozen_time: int
    mmp_interval: int
    subaccount_id: int
    mmp_amount_limit: Decimal = "0"
    mmp_delta_limit: Decimal = "0"


@dataclass
class PrivateSetMmpConfigResultSchema(PrivateSetMmpConfigParamsSchema):
    pass


class Direction(str, Enum):
    buy = "buy"
    sell = "sell"


@dataclass
class TradeModuleParamsSchema:
    amount: Decimal
    direction: Direction
    instrument_name: str
    limit_price: Decimal
    max_fee: Decimal
    nonce: int
    signature: str
    signature_expiry_sec: int
    signer: str
    subaccount_id: int


class CancelReason(str, Enum):
    field_ = ""
    user_request = "user_request"
    mmp_trigger = "mmp_trigger"
    insufficient_margin = "insufficient_margin"
    signed_max_fee_too_low = "signed_max_fee_too_low"
    cancel_on_disconnect = "cancel_on_disconnect"
    ioc_or_market_partial_fill = "ioc_or_market_partial_fill"
    session_key_deregistered = "session_key_deregistered"
    subaccount_withdrawn = "subaccount_withdrawn"
    compliance = "compliance"
    trigger_failed = "trigger_failed"
    validation_failed = "validation_failed"


class OrderStatus(str, Enum):
    open = "open"
    filled = "filled"
    cancelled = "cancelled"
    expired = "expired"
    untriggered = "untriggered"


class OrderType(str, Enum):
    limit = "limit"
    market = "market"


class TimeInForce(str, Enum):
    gtc = "gtc"
    post_only = "post_only"
    fok = "fok"
    ioc = "ioc"


class TriggerPriceType(str, Enum):
    mark = "mark"
    index = "index"


class TriggerType(str, Enum):
    stoploss = "stoploss"
    takeprofit = "takeprofit"


@dataclass
class OrderResponseSchema:
    amount: Decimal
    average_price: Decimal
    cancel_reason: CancelReason
    creation_timestamp: int
    direction: Direction
    filled_amount: Decimal
    instrument_name: str
    is_transfer: bool
    label: str
    last_update_timestamp: int
    limit_price: Decimal
    max_fee: Decimal
    mmp: bool
    nonce: int
    order_fee: Decimal
    order_id: str
    order_status: OrderStatus
    order_type: OrderType
    quote_id: Optional[str]
    signature: str
    signature_expiry_sec: int
    signer: str
    subaccount_id: int
    time_in_force: TimeInForce
    replaced_order_id: Optional[str] = None
    trigger_price: Optional[Decimal] = None
    trigger_price_type: Optional[TriggerPriceType] = None
    trigger_reject_message: Optional[str] = None
    trigger_type: Optional[TriggerType] = None


class LiquidityRole(str, Enum):
    maker = "maker"
    taker = "taker"


class TxStatus(str, Enum):
    requested = "requested"
    pending = "pending"
    settled = "settled"
    reverted = "reverted"
    ignored = "ignored"
    timed_out = "timed_out"


@dataclass
class TradeResponseSchema:
    direction: Direction
    expected_rebate: Decimal
    index_price: Decimal
    instrument_name: str
    is_transfer: bool
    label: str
    liquidity_role: LiquidityRole
    mark_price: Decimal
    order_id: str
    quote_id: Optional[str]
    realized_pnl: Decimal
    realized_pnl_excl_fees: Decimal
    subaccount_id: int
    timestamp: int
    trade_amount: Decimal
    trade_fee: Decimal
    trade_id: str
    trade_price: Decimal
    transaction_id: str
    tx_hash: Optional[str]
    tx_status: TxStatus


@dataclass
class PrivateCreateSubaccountParamsSchema:
    amount: Decimal
    asset_name: str
    margin_type: MarginType
    nonce: int
    signature: str
    signature_expiry_sec: int
    signer: str
    wallet: str
    currency: Optional[str] = None


@dataclass
class PrivateCreateSubaccountResultSchema:
    status: str
    transaction_id: str


@dataclass
class LegUnpricedSchema:
    amount: Decimal
    direction: Direction
    instrument_name: str


class CancelReason1(str, Enum):
    field_ = ""
    user_request = "user_request"
    insufficient_margin = "insufficient_margin"
    signed_max_fee_too_low = "signed_max_fee_too_low"
    mmp_trigger = "mmp_trigger"
    cancel_on_disconnect = "cancel_on_disconnect"
    session_key_deregistered = "session_key_deregistered"
    subaccount_withdrawn = "subaccount_withdrawn"
    rfq_no_longer_open = "rfq_no_longer_open"
    compliance = "compliance"


class Status1(str, Enum):
    open = "open"
    filled = "filled"
    cancelled = "cancelled"
    expired = "expired"


@dataclass
class PrivateSendRfqResultSchema:
    ask_total_cost: Optional[Decimal]
    bid_total_cost: Optional[Decimal]
    cancel_reason: CancelReason1
    counterparties: Optional[List[str]]
    creation_timestamp: int
    filled_direction: Optional[Direction]
    filled_pct: Decimal
    label: str
    last_update_timestamp: int
    legs: List[LegUnpricedSchema]
    mark_total_cost: Optional[Decimal]
    max_total_cost: Optional[Decimal]
    min_total_cost: Optional[Decimal]
    partial_fill_step: Decimal
    rfq_id: str
    status: Status1
    subaccount_id: int
    total_cost: Optional[Decimal]
    valid_until: int


@dataclass
class PublicMarginWatchParamsSchema:
    subaccount_id: int
    force_onchain: bool = False


@dataclass
class CollateralPublicResponseSchema:
    amount: Decimal
    asset_name: str
    asset_type: InstrumentType
    initial_margin: Decimal
    maintenance_margin: Decimal
    mark_price: Decimal
    mark_value: Decimal


@dataclass
class PositionPublicResponseSchema:
    amount: Decimal
    delta: Decimal
    gamma: Decimal
    index_price: Decimal
    initial_margin: Decimal
    instrument_name: str
    instrument_type: InstrumentType
    liquidation_price: Optional[Decimal]
    maintenance_margin: Decimal
    mark_price: Decimal
    mark_value: Decimal
    theta: Decimal
    vega: Decimal


@dataclass
class PublicStatisticsParamsSchema:
    instrument_name: str
    currency: Optional[str] = None
    end_time: Optional[int] = None


@dataclass
class PublicStatisticsResultSchema:
    daily_fees: Decimal
    daily_notional_volume: Decimal
    daily_premium_volume: Decimal
    daily_trades: int
    open_interest: Decimal
    total_fees: Decimal
    total_notional_volume: Decimal
    total_premium_volume: Decimal
    total_trades: int


@dataclass
class PublicLoginParamsSchema:
    signature: str
    timestamp: str
    wallet: str


@dataclass
class PublicLoginResponseSchema:
    id: Union[str, int]
    result: List[int]


@dataclass
class PrivateCancelParamsSchema:
    instrument_name: str
    order_id: str
    subaccount_id: int


@dataclass
class PrivateCancelResultSchema(OrderResponseSchema):
    pass


@dataclass
class LegPricedSchema:
    amount: Decimal
    direction: Direction
    instrument_name: str
    price: Decimal


@dataclass
class PrivateExecuteQuoteResultSchema:
    cancel_reason: CancelReason1
    creation_timestamp: int
    direction: Direction
    fee: Decimal
    fill_pct: Decimal
    is_transfer: bool
    label: str
    last_update_timestamp: int
    legs: List[LegPricedSchema]
    legs_hash: str
    liquidity_role: LiquidityRole
    max_fee: Decimal
    mmp: bool
    nonce: int
    quote_id: str
    rfq_filled_pct: Decimal
    rfq_id: str
    signature: str
    signature_expiry_sec: int
    signer: str
    status: Status1
    subaccount_id: int
    tx_hash: Optional[str]
    tx_status: Optional[TxStatus]


class Period(str, Enum):
    field_60 = 60
    field_300 = 300
    field_900 = 900
    field_1800 = 1800
    field_3600 = 3600
    field_14400 = 14400
    field_28800 = 28800
    field_86400 = 86400
    field_604800 = 604800


@dataclass
class PublicGetSpotFeedHistoryCandlesParamsSchema:
    currency: str
    end_timestamp: int
    period: Period
    start_timestamp: int


@dataclass
class SpotFeedHistoryCandlesResponseSchema:
    close_price: Decimal
    high_price: Decimal
    low_price: Decimal
    open_price: Decimal
    price: Decimal
    timestamp: int
    timestamp_bucket: int


@dataclass
class PrivatePollRfqsParamsSchema:
    subaccount_id: int
    from_timestamp: int = 0
    page: int = 1
    page_size: int = 100
    rfq_id: Optional[str] = None
    rfq_subaccount_id: Optional[int] = None
    status: Optional[Status1] = None
    to_timestamp: int = 18446744073709552000


@dataclass
class RFQResultPublicSchema:
    cancel_reason: CancelReason1
    creation_timestamp: int
    filled_direction: Optional[Direction]
    filled_pct: Decimal
    last_update_timestamp: int
    legs: List[LegUnpricedSchema]
    partial_fill_step: Decimal
    rfq_id: str
    status: Status1
    subaccount_id: int
    total_cost: Optional[Decimal]
    valid_until: int


@dataclass
class PrivateGetLiquidationHistoryParamsSchema:
    subaccount_id: int
    end_timestamp: int = 9223372036854776000
    start_timestamp: int = 0


class AuctionType(str, Enum):
    solvent = "solvent"
    insolvent = "insolvent"


@dataclass
class AuctionBidEventSchema:
    amounts_liquidated: Dict[str, Decimal]
    cash_received: Decimal
    discount_pnl: Decimal
    percent_liquidated: Decimal
    positions_realized_pnl: Dict[str, Decimal]
    positions_realized_pnl_excl_fees: Dict[str, Decimal]
    realized_pnl: Decimal
    realized_pnl_excl_fees: Decimal
    timestamp: int
    tx_hash: str


@dataclass
class PrivateOrderDebugParamsSchema:
    amount: Decimal
    direction: Direction
    instrument_name: str
    limit_price: Decimal
    max_fee: Decimal
    nonce: int
    signature: str
    signature_expiry_sec: int
    signer: str
    subaccount_id: int
    is_atomic_signing: Optional[bool] = False
    label: str = ""
    mmp: bool = False
    order_type: OrderType = OrderType.limit
    reduce_only: bool = False
    referral_code: str = ""
    reject_timestamp: int = 9223372036854776000
    time_in_force: TimeInForce = TimeInForce.gtc
    trigger_price: Optional[Decimal] = None
    trigger_price_type: Optional[TriggerPriceType] = None
    trigger_type: Optional[TriggerType] = None


@dataclass
class TradeModuleDataSchema:
    asset: str
    desired_amount: Decimal
    is_bid: bool
    limit_price: Decimal
    recipient_id: int
    sub_id: int
    trade_id: str
    worst_fee: Decimal


@dataclass
class PrivateDepositParamsSchema:
    amount: Decimal
    asset_name: str
    nonce: int
    signature: str
    signature_expiry_sec: int
    signer: str
    subaccount_id: int
    is_atomic_signing: bool = False


@dataclass
class PrivateDepositResultSchema(PrivateCreateSubaccountResultSchema):
    pass


@dataclass
class PrivateUpdateNotificationsParamsSchema:
    notification_ids: List[int]
    subaccount_id: int
    status: Status = Status.seen


@dataclass
class PrivateUpdateNotificationsResultSchema:
    updated_count: int


@dataclass
class PrivateChangeSubaccountLabelParamsSchema:
    label: str
    subaccount_id: int


@dataclass
class PrivateChangeSubaccountLabelResultSchema(
    PrivateChangeSubaccountLabelParamsSchema
):
    pass


@dataclass
class SignedQuoteParamsSchema:
    direction: Direction
    legs: List[LegPricedSchema]
    max_fee: Decimal
    nonce: int
    signature: str
    signature_expiry_sec: int
    signer: str
    subaccount_id: int


@dataclass
class QuoteResultSchema:
    cancel_reason: CancelReason1
    creation_timestamp: int
    direction: Direction
    fee: Decimal
    fill_pct: Decimal
    is_transfer: bool
    label: str
    last_update_timestamp: int
    legs: List[LegPricedSchema]
    legs_hash: str
    liquidity_role: LiquidityRole
    max_fee: Decimal
    mmp: bool
    nonce: int
    quote_id: str
    rfq_id: str
    signature: str
    signature_expiry_sec: int
    signer: str
    status: Status1
    subaccount_id: int
    tx_hash: Optional[str]
    tx_status: Optional[TxStatus]


@dataclass
class PublicGetMakerProgramsParamsSchema:
    pass


@dataclass
class ProgramResponseSchema:
    asset_types: List[str]
    currencies: List[str]
    end_timestamp: int
    min_notional: Decimal
    name: str
    rewards: Dict[str, Decimal]
    start_timestamp: int


@dataclass
class SimulatedCollateralSchema:
    amount: Decimal
    asset_name: str


@dataclass
class SimulatedPositionSchema:
    amount: Decimal
    instrument_name: str
    entry_price: Optional[Decimal] = None


@dataclass
class PublicGetMarginResultSchema:
    is_valid_trade: bool
    post_initial_margin: Decimal
    post_maintenance_margin: Decimal
    pre_initial_margin: Decimal
    pre_maintenance_margin: Decimal
    subaccount_id: int


@dataclass
class PrivateCancelByNonceParamsSchema:
    instrument_name: str
    nonce: int
    subaccount_id: int
    wallet: str


@dataclass
class PrivateCancelByNonceResultSchema:
    cancelled_orders: int


@dataclass
class PublicGetSpotFeedHistoryParamsSchema:
    currency: str
    end_timestamp: int
    period: int
    start_timestamp: int


@dataclass
class SpotFeedHistoryResponseSchema:
    price: Decimal
    timestamp: int
    timestamp_bucket: int


@dataclass
class PrivateGetSubaccountsParamsSchema:
    wallet: str


@dataclass
class PrivateGetSubaccountsResultSchema:
    subaccount_ids: List[int]
    wallet: str


@dataclass
class PrivateGetDepositHistoryParamsSchema(PrivateGetLiquidationHistoryParamsSchema):
    pass


@dataclass
class DepositSchema:
    amount: Decimal
    asset: str
    error_log: Optional[Dict[str, Any]]
    timestamp: int
    transaction_id: str
    tx_hash: str
    tx_status: TxStatus


@dataclass
class PrivateCancelByLabelParamsSchema:
    label: str
    subaccount_id: int
    instrument_name: Optional[str] = None


@dataclass
class PrivateCancelByLabelResultSchema(PrivateCancelByNonceResultSchema):
    pass


@dataclass
class PrivateGetMarginParamsSchema:
    subaccount_id: int
    simulated_collateral_changes: Optional[List[SimulatedCollateralSchema]] = None
    simulated_position_changes: Optional[List[SimulatedPositionSchema]] = None


@dataclass
class PrivateGetMarginResultSchema(PublicGetMarginResultSchema):
    pass


@dataclass
class PublicCreateSubaccountDebugParamsSchema:
    amount: Decimal
    asset_name: str
    margin_type: MarginType
    nonce: int
    signature_expiry_sec: int
    signer: str
    wallet: str
    currency: Optional[str] = None


@dataclass
class PublicCreateSubaccountDebugResultSchema:
    action_hash: str
    encoded_data: str
    encoded_data_hashed: str
    typed_data_hash: str


@dataclass
class PublicGetInstrumentParamsSchema:
    instrument_name: str


@dataclass
class ERC20PublicDetailsSchema:
    decimals: int
    borrow_index: Decimal = "1"
    supply_index: Decimal = "1"
    underlying_erc20_address: str = ""


class OptionType(str, Enum):
    C = "C"
    P = "P"


@dataclass
class OptionPublicDetailsSchema:
    expiry: int
    index: str
    option_type: OptionType
    strike: Decimal
    settlement_price: Optional[Decimal] = None


@dataclass
class PerpPublicDetailsSchema:
    aggregate_funding: Decimal
    funding_rate: Decimal
    index: str
    max_rate_per_hour: Decimal
    min_rate_per_hour: Decimal
    static_interest_rate: Decimal


@dataclass
class PrivateEditSessionKeyParamsSchema:
    public_session_key: str
    wallet: str
    disable: bool = False
    ip_whitelist: Optional[List[str]] = None
    label: Optional[str] = None


@dataclass
class PrivateEditSessionKeyResultSchema:
    expiry_sec: int
    ip_whitelist: List[str]
    label: str
    public_session_key: str
    scope: str


@dataclass
class PrivateGetLiquidatorHistoryParamsSchema:
    subaccount_id: int
    end_timestamp: int = 9223372036854776000
    page: int = 1
    page_size: int = 100
    start_timestamp: int = 0


@dataclass
class PrivateGetLiquidatorHistoryResultSchema:
    bids: List[AuctionBidEventSchema]
    pagination: PaginationInfoSchema


@dataclass
class PrivateGetPositionsParamsSchema:
    subaccount_id: int


@dataclass
class PositionResponseSchema:
    amount: Decimal
    amount_step: Decimal
    average_price: Decimal
    average_price_excl_fees: Decimal
    creation_timestamp: int
    cumulative_funding: Decimal
    delta: Decimal
    gamma: Decimal
    index_price: Decimal
    initial_margin: Decimal
    instrument_name: str
    instrument_type: InstrumentType
    leverage: Optional[Decimal]
    liquidation_price: Optional[Decimal]
    maintenance_margin: Decimal
    mark_price: Decimal
    mark_value: Decimal
    net_settlements: Decimal
    open_orders_margin: Decimal
    pending_funding: Decimal
    realized_pnl: Decimal
    realized_pnl_excl_fees: Decimal
    theta: Decimal
    total_fees: Decimal
    unrealized_pnl: Decimal
    unrealized_pnl_excl_fees: Decimal
    vega: Decimal


class TxStatus4(str, Enum):
    settled = "settled"
    reverted = "reverted"
    timed_out = "timed_out"


@dataclass
class PublicGetTradeHistoryParamsSchema:
    currency: Optional[str] = None
    from_timestamp: int = 0
    instrument_name: Optional[str] = None
    instrument_type: Optional[InstrumentType] = None
    page: int = 1
    page_size: int = 100
    subaccount_id: Optional[int] = None
    to_timestamp: int = 18446744073709552000
    trade_id: Optional[str] = None
    tx_hash: Optional[str] = None
    tx_status: TxStatus4 = TxStatus4.settled


@dataclass
class TradeSettledPublicResponseSchema:
    direction: Direction
    expected_rebate: Decimal
    index_price: Decimal
    instrument_name: str
    liquidity_role: LiquidityRole
    mark_price: Decimal
    quote_id: Optional[str]
    realized_pnl: Decimal
    realized_pnl_excl_fees: Decimal
    subaccount_id: int
    timestamp: int
    trade_amount: Decimal
    trade_fee: Decimal
    trade_id: str
    trade_price: Decimal
    tx_hash: str
    tx_status: TxStatus4
    wallet: str


@dataclass
class PrivateGetRfqsParamsSchema:
    subaccount_id: int
    from_timestamp: int = 0
    page: int = 1
    page_size: int = 100
    rfq_id: Optional[str] = None
    status: Optional[Status1] = None
    to_timestamp: int = 18446744073709552000


@dataclass
class RFQResultSchema(PrivateSendRfqResultSchema):
    pass


@dataclass
class SignatureDetailsSchema:
    nonce: int
    signature: str
    signature_expiry_sec: int
    signer: str


@dataclass
class TransferDetailsSchema:
    address: str
    amount: Decimal
    sub_id: int


@dataclass
class PrivateTransferErc20ResultSchema(PrivateCreateSubaccountResultSchema):
    pass


@dataclass
class PrivateSendQuoteParamsSchema:
    direction: Direction
    legs: List[LegPricedSchema]
    max_fee: Decimal
    nonce: int
    rfq_id: str
    signature: str
    signature_expiry_sec: int
    signer: str
    subaccount_id: int
    label: str = ""
    mmp: bool = False


@dataclass
class PrivateSendQuoteResultSchema(QuoteResultSchema):
    pass


@dataclass
class PrivateCancelTriggerOrderParamsSchema:
    order_id: str
    subaccount_id: int


@dataclass
class PrivateCancelTriggerOrderResultSchema(OrderResponseSchema):
    pass


@dataclass
class PrivateGetWithdrawalHistoryParamsSchema(PrivateGetLiquidationHistoryParamsSchema):
    pass


@dataclass
class WithdrawalSchema:
    amount: Decimal
    asset: str
    error_log: Optional[Dict[str, Any]]
    timestamp: int
    tx_hash: str
    tx_status: TxStatus


@dataclass
class PublicGetOptionSettlementPricesParamsSchema(PublicGetCurrencyParamsSchema):
    pass


@dataclass
class ExpiryResponseSchema:
    expiry_date: str
    price: Optional[Decimal]
    utc_expiry_sec: int


@dataclass
class PublicGetMakerProgramScoresParamsSchema:
    epoch_start_timestamp: int
    program_name: str


@dataclass
class ScoreBreakdownSchema:
    coverage_score: Decimal
    holder_boost: Decimal
    quality_score: Decimal
    total_score: Decimal
    volume: Decimal
    volume_multiplier: Decimal
    wallet: str


@dataclass
class PublicBuildRegisterSessionKeyTxParamsSchema:
    expiry_sec: int
    gas: Optional[int]
    nonce: Optional[int]
    public_session_key: str
    wallet: str


@dataclass
class PublicBuildRegisterSessionKeyTxResultSchema:
    tx_params: Dict[str, Any]


@dataclass
class PublicRegisterSessionKeyParamsSchema:
    expiry_sec: int
    label: str
    public_session_key: str
    signed_raw_tx: str
    wallet: str


@dataclass
class PublicRegisterSessionKeyResultSchema:
    label: str
    public_session_key: str
    transaction_id: str


@dataclass
class PrivateGetOrderHistoryParamsSchema:
    subaccount_id: int
    page: int = 1
    page_size: int = 100


@dataclass
class PrivateGetOrderHistoryResultSchema:
    orders: List[OrderResponseSchema]
    pagination: PaginationInfoSchema
    subaccount_id: int


@dataclass
class PrivateCancelRfqParamsSchema:
    rfq_id: str
    subaccount_id: int


class Result(str, Enum):
    ok = "ok"


@dataclass
class PrivateCancelRfqResponseSchema:
    id: Union[str, int]
    result: Result


@dataclass
class PrivateCancelBatchRfqsParamsSchema:
    subaccount_id: int
    label: Optional[str] = None
    nonce: Optional[int] = None
    rfq_id: Optional[str] = None


@dataclass
class PrivateCancelBatchRfqsResultSchema:
    cancelled_ids: List[str]


@dataclass
class PrivateCancelBatchQuotesParamsSchema:
    subaccount_id: int
    label: Optional[str] = None
    nonce: Optional[int] = None
    quote_id: Optional[str] = None
    rfq_id: Optional[str] = None


@dataclass
class PrivateCancelBatchQuotesResultSchema(PrivateCancelBatchRfqsResultSchema):
    pass


@dataclass
class PublicGetTimeParamsSchema(PublicGetMakerProgramsParamsSchema):
    pass


@dataclass
class PublicGetTimeResponseSchema:
    id: Union[str, int]
    result: int


@dataclass
class PrivateGetFundingHistoryParamsSchema:
    subaccount_id: int
    end_timestamp: int = 9223372036854776000
    instrument_name: Optional[str] = None
    page: int = 1
    page_size: int = 100
    start_timestamp: int = 0


@dataclass
class FundingPaymentSchema:
    funding: Decimal
    instrument_name: str
    pnl: Decimal
    timestamp: int


@dataclass
class PrivateGetOpenOrdersParamsSchema(PrivateGetPositionsParamsSchema):
    pass


@dataclass
class PrivateGetOpenOrdersResultSchema:
    orders: List[OrderResponseSchema]
    subaccount_id: int


@dataclass
class PrivateGetAccountParamsSchema(PrivateGetSubaccountsParamsSchema):
    pass


@dataclass
class AccountFeeInfoSchema:
    base_fee_discount: Decimal
    option_maker_fee: Optional[Decimal]
    option_taker_fee: Optional[Decimal]
    perp_maker_fee: Optional[Decimal]
    perp_taker_fee: Optional[Decimal]
    rfq_maker_discount: Decimal
    rfq_taker_discount: Decimal
    spot_maker_fee: Optional[Decimal]
    spot_taker_fee: Optional[Decimal]


@dataclass
class PublicGetAllInstrumentsParamsSchema:
    expired: bool
    instrument_type: InstrumentType
    currency: Optional[str] = None
    page: int = 1
    page_size: int = 100


@dataclass
class InstrumentPublicResponseSchema:
    amount_step: Decimal
    base_asset_address: str
    base_asset_sub_id: str
    base_currency: str
    base_fee: Decimal
    erc20_details: Optional[ERC20PublicDetailsSchema]
    fifo_min_allocation: Decimal
    instrument_name: str
    instrument_type: InstrumentType
    is_active: bool
    maker_fee_rate: Decimal
    maximum_amount: Decimal
    minimum_amount: Decimal
    option_details: Optional[OptionPublicDetailsSchema]
    perp_details: Optional[PerpPublicDetailsSchema]
    pro_rata_amount_step: Decimal
    pro_rata_fraction: Decimal
    quote_currency: str
    scheduled_activation: int
    scheduled_deactivation: int
    taker_fee_rate: Decimal
    tick_size: Decimal
    mark_price_fee_rate_cap: Optional[Decimal] = None


@dataclass
class PublicGetTickerParamsSchema(PublicGetInstrumentParamsSchema):
    pass


@dataclass
class OptionPricingSchema:
    ask_iv: Decimal
    bid_iv: Decimal
    delta: Decimal
    discount_factor: Decimal
    forward_price: Decimal
    gamma: Decimal
    iv: Decimal
    mark_price: Decimal
    rho: Decimal
    theta: Decimal
    vega: Decimal


@dataclass
class AggregateTradingStatsSchema:
    contract_volume: Decimal
    high: Decimal
    low: Decimal
    num_trades: Decimal
    open_interest: Decimal
    percent_change: Decimal
    usd_change: Decimal


@dataclass
class PublicGetVaultShareParamsSchema:
    from_timestamp_sec: int
    to_timestamp_sec: int
    vault_name: str
    page: int = 1
    page_size: int = 100


@dataclass
class VaultShareResponseSchema:
    base_value: Decimal
    block_number: int
    block_timestamp: int
    underlying_value: Optional[Decimal]
    usd_value: Decimal


@dataclass
class PrivateGetCollateralsParamsSchema(PrivateGetPositionsParamsSchema):
    pass


@dataclass
class CollateralResponseSchema:
    amount: Decimal
    amount_step: Decimal
    asset_name: str
    asset_type: InstrumentType
    average_price: Decimal
    average_price_excl_fees: Decimal
    creation_timestamp: int
    cumulative_interest: Decimal
    currency: str
    delta: Decimal
    delta_currency: str
    initial_margin: Decimal
    maintenance_margin: Decimal
    mark_price: Decimal
    mark_value: Decimal
    open_orders_margin: Decimal
    pending_interest: Decimal
    realized_pnl: Decimal
    realized_pnl_excl_fees: Decimal
    total_fees: Decimal
    unrealized_pnl: Decimal
    unrealized_pnl_excl_fees: Decimal


class Scope(str, Enum):
    admin = "admin"
    account = "account"
    read_only = "read_only"


@dataclass
class PrivateRegisterScopedSessionKeyParamsSchema:
    expiry_sec: int
    public_session_key: str
    wallet: str
    ip_whitelist: Optional[List[str]] = None
    label: Optional[str] = None
    scope: Scope = Scope.read_only
    signed_raw_tx: Optional[str] = None


@dataclass
class PrivateRegisterScopedSessionKeyResultSchema:
    expiry_sec: int
    ip_whitelist: Optional[List[str]]
    label: Optional[str]
    public_session_key: str
    scope: Scope
    transaction_id: Optional[str]


@dataclass
class PrivateExpiredAndCancelledHistoryParamsSchema:
    end_timestamp: int
    expiry: int
    start_timestamp: int
    subaccount_id: int
    wallet: str


@dataclass
class PrivateExpiredAndCancelledHistoryResultSchema:
    presigned_urls: List[str]


@dataclass
class PrivateSessionKeysParamsSchema(PrivateGetSubaccountsParamsSchema):
    pass


@dataclass
class SessionKeyResponseSchema(PrivateEditSessionKeyResultSchema):
    pass


@dataclass
class PrivateGetMmpConfigParamsSchema:
    subaccount_id: int
    currency: Optional[str] = None


@dataclass
class MMPConfigResultSchema:
    currency: str
    is_frozen: bool
    mmp_frozen_time: int
    mmp_interval: int
    mmp_unfreeze_time: int
    subaccount_id: int
    mmp_amount_limit: Decimal = "0"
    mmp_delta_limit: Decimal = "0"


@dataclass
class PrivateOrderParamsSchema(PrivateOrderDebugParamsSchema):
    pass


@dataclass
class PrivateOrderResultSchema:
    order: OrderResponseSchema
    trades: List[TradeResponseSchema]


@dataclass
class PrivateGetSubaccountParamsSchema(PrivateGetPositionsParamsSchema):
    pass


@dataclass
class PrivateGetSubaccountResultSchema:
    collaterals: List[CollateralResponseSchema]
    collaterals_initial_margin: Decimal
    collaterals_maintenance_margin: Decimal
    collaterals_value: Decimal
    currency: str
    initial_margin: Decimal
    is_under_liquidation: bool
    label: str
    maintenance_margin: Decimal
    margin_type: MarginType
    open_orders: List[OrderResponseSchema]
    open_orders_margin: Decimal
    positions: List[PositionResponseSchema]
    positions_initial_margin: Decimal
    positions_maintenance_margin: Decimal
    positions_value: Decimal
    projected_margin_change: Decimal
    subaccount_id: int
    subaccount_value: Decimal


@dataclass
class PublicGetInterestRateHistoryParamsSchema:
    from_timestamp_sec: int
    to_timestamp_sec: int
    page: int = 1
    page_size: int = 100


@dataclass
class InterestRateHistoryResponseSchema:
    block: int
    borrow_apy: Decimal
    supply_apy: Decimal
    timestamp_sec: int
    total_borrow: Decimal
    total_supply: Decimal


@dataclass
class PrivateGetAllPortfoliosParamsSchema(PrivateGetSubaccountsParamsSchema):
    pass


@dataclass
class PrivateGetAllPortfoliosResponseSchema:
    id: Union[str, int]
    result: List[PrivateGetSubaccountResultSchema]


@dataclass
class PublicGetLiquidationHistoryParamsSchema:
    end_timestamp: int = 9223372036854776000
    page: int = 1
    page_size: int = 100
    start_timestamp: int = 0
    subaccount_id: Optional[int] = None


@dataclass
class PublicDepositDebugParamsSchema:
    amount: Decimal
    asset_name: str
    nonce: int
    signature_expiry_sec: int
    signer: str
    subaccount_id: int
    is_atomic_signing: bool = False


@dataclass
class PublicDepositDebugResultSchema(PublicCreateSubaccountDebugResultSchema):
    pass


@dataclass
class PublicGetVaultBalancesParamsSchema:
    smart_contract_owner: Optional[str] = None
    wallet: Optional[str] = None


@dataclass
class VaultBalanceResponseSchema:
    address: str
    amount: Decimal
    chain_id: int
    name: str
    vault_asset_type: str


@dataclass
class PublicGetReferralPerformanceParamsSchema:
    end_ms: int
    start_ms: int
    referral_code: Optional[str] = None
    wallet: Optional[str] = None


@dataclass
class ReferralPerformanceByInstrumentTypeSchema:
    fee_reward: Decimal
    notional_volume: Decimal
    referred_fee: Decimal


@dataclass
class PrivateSetCancelOnDisconnectParamsSchema:
    enabled: bool
    wallet: str


@dataclass
class PrivateSetCancelOnDisconnectResponseSchema(PrivateCancelRfqResponseSchema):
    pass


@dataclass
class PrivateCancelQuoteParamsSchema:
    quote_id: str
    subaccount_id: int


@dataclass
class PrivateCancelQuoteResultSchema(QuoteResultSchema):
    pass


@dataclass
class PrivateGetQuotesParamsSchema:
    subaccount_id: int
    from_timestamp: int = 0
    page: int = 1
    page_size: int = 100
    quote_id: Optional[str] = None
    rfq_id: Optional[str] = None
    status: Optional[Status1] = None
    to_timestamp: int = 18446744073709552000


@dataclass
class PrivateGetQuotesResultSchema:
    pagination: PaginationInfoSchema
    quotes: List[QuoteResultSchema]


@dataclass
class PublicExecuteQuoteDebugParamsSchema:
    direction: Direction
    legs: List[LegPricedSchema]
    max_fee: Decimal
    nonce: int
    quote_id: str
    rfq_id: str
    signature: str
    signature_expiry_sec: int
    signer: str
    subaccount_id: int
    enable_taker_protection: bool = False
    label: str = ""


@dataclass
class PublicExecuteQuoteDebugResultSchema:
    action_hash: str
    encoded_data: str
    encoded_data_hashed: str
    encoded_legs: str
    legs_hash: str
    typed_data_hash: str


@dataclass
class PrivateGetOptionSettlementHistoryParamsSchema(PrivateGetPositionsParamsSchema):
    pass


@dataclass
class OptionSettlementResponseSchema:
    amount: Decimal
    expiry: int
    instrument_name: str
    option_settlement_pnl: Decimal
    option_settlement_pnl_excl_fees: Decimal
    settlement_price: Decimal
    subaccount_id: int


@dataclass
class PrivateResetMmpParamsSchema(PrivateGetMmpConfigParamsSchema):
    pass


@dataclass
class PrivateResetMmpResponseSchema(PrivateCancelRfqResponseSchema):
    pass


@dataclass
class PrivateGetErc20TransferHistoryParamsSchema(
    PrivateGetLiquidationHistoryParamsSchema
):
    pass


@dataclass
class ERC20TransferSchema:
    amount: Decimal
    asset: str
    counterparty_subaccount_id: int
    is_outgoing: bool
    timestamp: int
    tx_hash: str


@dataclass
class PublicGetAllCurrenciesParamsSchema(PublicGetMakerProgramsParamsSchema):
    pass


@dataclass
class CurrencyDetailedResponseSchema:
    asset_cap_and_supply_per_manager: Dict[
        str, Dict[str, List[OpenInterestStatsSchema]]
    ]
    borrow_apy: Decimal
    currency: str
    instrument_types: List[InstrumentType]
    managers: List[ManagerContractResponseSchema]
    market_type: MarketType
    pm2_collateral_discounts: List[PM2CollateralDiscountsSchema]
    protocol_asset_addresses: ProtocolAssetAddressesSchema
    spot_price: Decimal
    srm_im_discount: Decimal
    srm_mm_discount: Decimal
    supply_apy: Decimal
    total_borrow: Decimal
    total_supply: Decimal
    erc20_details: Optional[Dict[str, Optional[str]]] = None
    spot_price_24h: Optional[Decimal] = None


@dataclass
class PrivateGetSubaccountValueHistoryParamsSchema:
    end_timestamp: int
    period: int
    start_timestamp: int
    subaccount_id: int


@dataclass
class SubAccountValueHistoryResponseSchema:
    subaccount_value: Decimal
    timestamp: int


@dataclass
class PublicSendQuoteDebugParamsSchema(PrivateSendQuoteParamsSchema):
    pass


@dataclass
class PublicSendQuoteDebugResultSchema(PublicCreateSubaccountDebugResultSchema):
    pass


@dataclass
class PublicGetLiveIncidentsParamsSchema(PublicGetMakerProgramsParamsSchema):
    pass


class MonitorType(str, Enum):
    manual = "manual"
    auto = "auto"


class Severity(str, Enum):
    low = "low"
    medium = "medium"
    high = "high"


@dataclass
class IncidentResponseSchema:
    creation_timestamp_sec: int
    label: str
    message: str
    monitor_type: MonitorType
    severity: Severity


@dataclass
class PublicGetTransactionParamsSchema:
    transaction_id: str


@dataclass
class PublicGetTransactionResultSchema:
    data: str
    error_log: Optional[str]
    status: TxStatus
    transaction_hash: Optional[str]


@dataclass
class PrivateGetOrdersParamsSchema:
    subaccount_id: int
    instrument_name: Optional[str] = None
    label: Optional[str] = None
    page: int = 1
    page_size: int = 100
    status: Optional[OrderStatus] = None


@dataclass
class PrivateGetOrdersResultSchema(PrivateGetOrderHistoryResultSchema):
    pass


@dataclass
class PrivateGetInterestHistoryParamsSchema(PrivateGetLiquidationHistoryParamsSchema):
    pass


@dataclass
class InterestPaymentSchema:
    interest: Decimal
    timestamp: int


@dataclass
class PrivatePollQuotesParamsSchema(PrivateGetQuotesParamsSchema):
    pass


@dataclass
class QuoteResultPublicSchema:
    cancel_reason: CancelReason1
    creation_timestamp: int
    direction: Direction
    fill_pct: Decimal
    last_update_timestamp: int
    legs: List[LegPricedSchema]
    legs_hash: str
    liquidity_role: LiquidityRole
    quote_id: str
    rfq_id: str
    status: Status1
    subaccount_id: int
    tx_hash: Optional[str]
    tx_status: Optional[TxStatus]
    wallet: str


@dataclass
class PrivateGetOrderParamsSchema(PrivateCancelTriggerOrderParamsSchema):
    pass


@dataclass
class PrivateGetOrderResultSchema(OrderResponseSchema):
    pass


@dataclass
class PublicGetVaultStatisticsParamsSchema(PublicGetMakerProgramsParamsSchema):
    pass


@dataclass
class VaultStatisticsResponseSchema:
    base_value: Decimal
    block_number: int
    block_timestamp: int
    subaccount_value_at_last_trade: Optional[Decimal]
    total_supply: Decimal
    underlying_value: Optional[Decimal]
    usd_tvl: Decimal
    usd_value: Decimal
    vault_name: str


@dataclass
class PublicWithdrawDebugParamsSchema(PublicDepositDebugParamsSchema):
    pass


@dataclass
class PublicWithdrawDebugResultSchema(PublicCreateSubaccountDebugResultSchema):
    pass


class Period1(str, Enum):
    field_900 = 900
    field_3600 = 3600
    field_14400 = 14400
    field_28800 = 28800
    field_86400 = 86400


@dataclass
class PublicGetFundingRateHistoryParamsSchema:
    instrument_name: str
    end_timestamp: int = 9223372036854776000
    period: Period1 = Period1.field_3600
    start_timestamp: int = 0


@dataclass
class FundingRateSchema:
    funding_rate: Decimal
    timestamp: int


@dataclass
class PrivateRfqGetBestQuoteParamsSchema:
    legs: List[LegUnpricedSchema]
    subaccount_id: int
    counterparties: Optional[List[str]] = None
    direction: Direction = Direction.buy
    label: str = ""
    max_total_cost: Optional[Decimal] = None
    min_total_cost: Optional[Decimal] = None
    partial_fill_step: Decimal = "1"
    rfq_id: Optional[str] = None


class InvalidReason(str, Enum):
    Account_is_currently_under_maintenance_margin_requirements__trading_is_frozen_ = (
        "Account is currently under maintenance margin requirements, trading is frozen."
    )
    This_order_would_cause_account_to_fall_under_maintenance_margin_requirements_ = (
        "This order would cause account to fall under maintenance margin requirements."
    )
    Insufficient_buying_power__only_a_single_risk_reducing_open_order_is_allowed_ = (
        "Insufficient buying power, only a single risk-reducing open order is allowed."
    )
    Insufficient_buying_power__consider_reducing_order_size_ = (
        "Insufficient buying power, consider reducing order size."
    )
    Insufficient_buying_power__consider_reducing_order_size_or_canceling_other_orders_ = "Insufficient buying power, consider reducing order size or canceling other orders."
    Consider_canceling_other_limit_orders_or_using_IOC__FOK__or_market_orders__This_order_is_risk_reducing__but_if_filled_with_other_open_orders__buying_power_might_be_insufficient_ = "Consider canceling other limit orders or using IOC, FOK, or market orders. This order is risk-reducing, but if filled with other open orders, buying power might be insufficient."
    Insufficient_buying_power_ = "Insufficient buying power."


@dataclass
class PrivateRfqGetBestQuoteResultSchema:
    best_quote: Optional[QuoteResultPublicSchema]
    direction: Direction
    down_liquidation_price: Optional[Decimal]
    estimated_fee: Decimal
    estimated_realized_pnl: Decimal
    estimated_realized_pnl_excl_fees: Decimal
    estimated_total_cost: Decimal
    filled_pct: Decimal
    invalid_reason: Optional[InvalidReason]
    is_valid: bool
    orderbook_total_cost: Optional[Decimal]
    post_initial_margin: Decimal
    post_liquidation_price: Optional[Decimal]
    pre_initial_margin: Decimal
    suggested_max_fee: Decimal
    up_liquidation_price: Optional[Decimal]


@dataclass
class PublicGetInstrumentsParamsSchema:
    currency: str
    expired: bool
    instrument_type: InstrumentType


@dataclass
class PublicGetInstrumentsResponseSchema:
    id: Union[str, int]
    result: List[InstrumentPublicResponseSchema]


@dataclass
class PublicGetOptionSettlementHistoryParamsSchema:
    page: int = 1
    page_size: int = 100
    subaccount_id: Optional[int] = None


@dataclass
class PublicGetOptionSettlementHistoryResultSchema:
    pagination: PaginationInfoSchema
    settlements: List[OptionSettlementResponseSchema]


@dataclass
class PrivateLiquidateParamsSchema:
    cash_transfer: Decimal
    last_seen_trade_id: int
    liquidated_subaccount_id: int
    nonce: int
    percent_bid: Decimal
    price_limit: Decimal
    signature: str
    signature_expiry_sec: int
    signer: str
    subaccount_id: int


@dataclass
class PrivateLiquidateResultSchema:
    estimated_bid_price: Decimal
    estimated_discount_pnl: Decimal
    estimated_percent_bid: Decimal
    transaction_id: str


@dataclass
class PrivateGetTradeHistoryParamsSchema:
    from_timestamp: int = 0
    instrument_name: Optional[str] = None
    order_id: Optional[str] = None
    page: int = 1
    page_size: int = 100
    quote_id: Optional[str] = None
    subaccount_id: Optional[int] = None
    to_timestamp: int = 18446744073709552000
    wallet: Optional[str] = None


@dataclass
class PrivateGetTradeHistoryResultSchema:
    pagination: PaginationInfoSchema
    subaccount_id: int
    trades: List[TradeResponseSchema]


@dataclass
class PublicGetLatestSignedFeedsParamsSchema:
    currency: Optional[str] = None
    expiry: Optional[int] = None


@dataclass
class OracleSignatureDataSchema:
    signatures: Optional[List[str]] = None
    signers: Optional[List[str]] = None


class Type(str, Enum):
    P = "P"
    A = "A"
    B = "B"


@dataclass
class PerpFeedDataSchema:
    confidence: Decimal
    currency: str
    deadline: int
    signatures: OracleSignatureDataSchema
    spot_diff_value: Decimal
    timestamp: int
    type: Type


@dataclass
class RateFeedDataSchema:
    confidence: Decimal
    currency: str
    deadline: int
    expiry: int
    rate: Decimal
    signatures: OracleSignatureDataSchema
    timestamp: int


class FeedSourceType(str, Enum):
    S = "S"
    O = "O"


@dataclass
class SpotFeedDataSchema:
    confidence: Decimal
    currency: str
    deadline: int
    price: Decimal
    signatures: OracleSignatureDataSchema
    timestamp: int
    feed_source_type: FeedSourceType = FeedSourceType.S


@dataclass
class VolSVIParamDataSchema:
    SVI_a: Decimal
    SVI_b: Decimal
    SVI_fwd: Decimal
    SVI_m: Decimal
    SVI_refTau: Decimal
    SVI_rho: Decimal
    SVI_sigma: Decimal


@dataclass
class PrivateReplaceParamsSchema:
    amount: Decimal
    direction: Direction
    instrument_name: str
    limit_price: Decimal
    max_fee: Decimal
    nonce: int
    signature: str
    signature_expiry_sec: int
    signer: str
    subaccount_id: int
    expected_filled_amount: Optional[Decimal] = None
    is_atomic_signing: Optional[bool] = False
    label: str = ""
    mmp: bool = False
    nonce_to_cancel: Optional[int] = None
    order_id_to_cancel: Optional[str] = None
    order_type: OrderType = OrderType.limit
    reduce_only: bool = False
    referral_code: str = ""
    reject_timestamp: int = 9223372036854776000
    time_in_force: TimeInForce = TimeInForce.gtc
    trigger_price: Optional[Decimal] = None
    trigger_price_type: Optional[TriggerPriceType] = None
    trigger_type: Optional[TriggerType] = None


@dataclass
class RPCErrorFormatSchema:
    code: int
    message: str
    data: Optional[str] = None


@dataclass
class PrivateCancelByInstrumentParamsSchema:
    instrument_name: str
    subaccount_id: int


@dataclass
class PrivateCancelByInstrumentResultSchema(PrivateCancelByNonceResultSchema):
    pass


@dataclass
class PrivateCancelAllParamsSchema(PrivateGetPositionsParamsSchema):
    pass


@dataclass
class PrivateCancelAllResponseSchema(PrivateCancelRfqResponseSchema):
    pass


@dataclass
class PublicDeregisterSessionKeyParamsSchema:
    public_session_key: str
    signed_raw_tx: str
    wallet: str


@dataclass
class PublicDeregisterSessionKeyResultSchema:
    public_session_key: str
    transaction_id: str


@dataclass
class PrivateWithdrawParamsSchema(PrivateDepositParamsSchema):
    pass


@dataclass
class PrivateWithdrawResultSchema(PrivateCreateSubaccountResultSchema):
    pass


@dataclass
class PrivateGetNotificationsResultSchema:
    notifications: List[NotificationResponseSchema]
    pagination: PaginationInfoSchema


@dataclass
class PublicGetCurrencyResultSchema(CurrencyDetailedResponseSchema):
    pass


@dataclass
class PrivateSetMmpConfigResponseSchema:
    id: Union[str, int]
    result: PrivateSetMmpConfigResultSchema


@dataclass
class PrivateTransferPositionParamsSchema:
    maker_params: TradeModuleParamsSchema
    taker_params: TradeModuleParamsSchema
    wallet: str


@dataclass
class PrivateTransferPositionResultSchema:
    maker_order: OrderResponseSchema
    maker_trade: TradeResponseSchema
    taker_order: OrderResponseSchema
    taker_trade: TradeResponseSchema


@dataclass
class PrivateCreateSubaccountResponseSchema:
    id: Union[str, int]
    result: PrivateCreateSubaccountResultSchema


@dataclass
class PrivateSendRfqParamsSchema:
    legs: List[LegUnpricedSchema]
    subaccount_id: int
    counterparties: Optional[List[str]] = None
    label: str = ""
    max_total_cost: Optional[Decimal] = None
    min_total_cost: Optional[Decimal] = None
    partial_fill_step: Decimal = "1"


@dataclass
class PrivateSendRfqResponseSchema:
    id: Union[str, int]
    result: PrivateSendRfqResultSchema


@dataclass
class PublicMarginWatchResultSchema:
    collaterals: List[CollateralPublicResponseSchema]
    currency: str
    initial_margin: Decimal
    maintenance_margin: Decimal
    margin_type: MarginType
    positions: List[PositionPublicResponseSchema]
    subaccount_id: int
    subaccount_value: Decimal
    valuation_timestamp: int


@dataclass
class PublicStatisticsResponseSchema:
    id: Union[str, int]
    result: PublicStatisticsResultSchema


@dataclass
class PrivateCancelResponseSchema:
    id: Union[str, int]
    result: PrivateCancelResultSchema


@dataclass
class PrivateExecuteQuoteParamsSchema(PublicExecuteQuoteDebugParamsSchema):
    pass


@dataclass
class PrivateExecuteQuoteResponseSchema:
    id: Union[str, int]
    result: PrivateExecuteQuoteResultSchema


@dataclass
class PublicGetSpotFeedHistoryCandlesResultSchema:
    currency: str
    spot_feed_history: List[SpotFeedHistoryCandlesResponseSchema]


@dataclass
class PrivatePollRfqsResultSchema:
    pagination: PaginationInfoSchema
    rfqs: List[RFQResultPublicSchema]


@dataclass
class AuctionResultSchema:
    auction_id: str
    auction_type: AuctionType
    bids: List[AuctionBidEventSchema]
    end_timestamp: Optional[int]
    fee: Decimal
    start_timestamp: int
    subaccount_id: int
    tx_hash: str


@dataclass
class SignedTradeOrderSchema:
    data: TradeModuleDataSchema
    expiry: int
    is_atomic_signing: bool
    module: str
    nonce: int
    owner: str
    signature: str
    signer: str
    subaccount_id: int


@dataclass
class PrivateDepositResponseSchema:
    id: Union[str, int]
    result: PrivateDepositResultSchema


@dataclass
class PrivateUpdateNotificationsResponseSchema:
    id: Union[str, int]
    result: PrivateUpdateNotificationsResultSchema


@dataclass
class PrivateChangeSubaccountLabelResponseSchema:
    id: Union[str, int]
    result: PrivateChangeSubaccountLabelResultSchema


@dataclass
class PrivateTransferPositionsParamsSchema:
    maker_params: SignedQuoteParamsSchema
    taker_params: SignedQuoteParamsSchema
    wallet: str


@dataclass
class PrivateTransferPositionsResultSchema:
    maker_quote: QuoteResultSchema
    taker_quote: QuoteResultSchema


@dataclass
class PublicGetMakerProgramsResponseSchema:
    id: Union[str, int]
    result: List[ProgramResponseSchema]


@dataclass
class PublicGetMarginParamsSchema:
    margin_type: MarginType
    simulated_collaterals: List[SimulatedCollateralSchema]
    simulated_positions: List[SimulatedPositionSchema]
    market: Optional[str] = None
    simulated_collateral_changes: Optional[List[SimulatedCollateralSchema]] = None
    simulated_position_changes: Optional[List[SimulatedPositionSchema]] = None


@dataclass
class PublicGetMarginResponseSchema:
    id: Union[str, int]
    result: PublicGetMarginResultSchema


@dataclass
class PrivateCancelByNonceResponseSchema:
    id: Union[str, int]
    result: PrivateCancelByNonceResultSchema


@dataclass
class PublicGetSpotFeedHistoryResultSchema:
    currency: str
    spot_feed_history: List[SpotFeedHistoryResponseSchema]


@dataclass
class PrivateGetSubaccountsResponseSchema:
    id: Union[str, int]
    result: PrivateGetSubaccountsResultSchema


@dataclass
class PrivateGetDepositHistoryResultSchema:
    events: List[DepositSchema]


@dataclass
class PrivateCancelByLabelResponseSchema:
    id: Union[str, int]
    result: PrivateCancelByLabelResultSchema


@dataclass
class PrivateGetMarginResponseSchema:
    id: Union[str, int]
    result: PrivateGetMarginResultSchema


@dataclass
class PublicCreateSubaccountDebugResponseSchema:
    id: Union[str, int]
    result: PublicCreateSubaccountDebugResultSchema


@dataclass
class PublicGetInstrumentResultSchema(InstrumentPublicResponseSchema):
    pass


@dataclass
class PrivateEditSessionKeyResponseSchema:
    id: Union[str, int]
    result: PrivateEditSessionKeyResultSchema


@dataclass
class PrivateGetLiquidatorHistoryResponseSchema:
    id: Union[str, int]
    result: PrivateGetLiquidatorHistoryResultSchema


@dataclass
class PrivateGetPositionsResultSchema:
    positions: List[PositionResponseSchema]
    subaccount_id: int


@dataclass
class PublicGetTradeHistoryResultSchema:
    pagination: PaginationInfoSchema
    trades: List[TradeSettledPublicResponseSchema]


@dataclass
class PrivateGetRfqsResultSchema:
    pagination: PaginationInfoSchema
    rfqs: List[RFQResultSchema]


@dataclass
class PrivateTransferErc20ParamsSchema:
    recipient_details: SignatureDetailsSchema
    recipient_subaccount_id: int
    sender_details: SignatureDetailsSchema
    subaccount_id: int
    transfer: TransferDetailsSchema


@dataclass
class PrivateTransferErc20ResponseSchema:
    id: Union[str, int]
    result: PrivateTransferErc20ResultSchema


@dataclass
class PrivateSendQuoteResponseSchema:
    id: Union[str, int]
    result: PrivateSendQuoteResultSchema


@dataclass
class PrivateCancelTriggerOrderResponseSchema:
    id: Union[str, int]
    result: PrivateCancelTriggerOrderResultSchema


@dataclass
class PrivateGetWithdrawalHistoryResultSchema:
    events: List[WithdrawalSchema]


@dataclass
class PublicGetOptionSettlementPricesResultSchema:
    expiries: List[ExpiryResponseSchema]


@dataclass
class PublicGetMakerProgramScoresResultSchema:
    program: ProgramResponseSchema
    scores: List[ScoreBreakdownSchema]
    total_score: Decimal
    total_volume: Decimal


@dataclass
class PublicBuildRegisterSessionKeyTxResponseSchema:
    id: Union[str, int]
    result: PublicBuildRegisterSessionKeyTxResultSchema


@dataclass
class PublicRegisterSessionKeyResponseSchema:
    id: Union[str, int]
    result: PublicRegisterSessionKeyResultSchema


@dataclass
class PrivateGetOrderHistoryResponseSchema:
    id: Union[str, int]
    result: PrivateGetOrderHistoryResultSchema


@dataclass
class PrivateCancelBatchRfqsResponseSchema:
    id: Union[str, int]
    result: PrivateCancelBatchRfqsResultSchema


@dataclass
class PrivateCancelBatchQuotesResponseSchema:
    id: Union[str, int]
    result: PrivateCancelBatchQuotesResultSchema


@dataclass
class PrivateGetFundingHistoryResultSchema:
    events: List[FundingPaymentSchema]
    pagination: PaginationInfoSchema


@dataclass
class PrivateGetOpenOrdersResponseSchema:
    id: Union[str, int]
    result: PrivateGetOpenOrdersResultSchema


@dataclass
class PrivateGetAccountResultSchema:
    cancel_on_disconnect: bool
    fee_info: AccountFeeInfoSchema
    is_rfq_maker: bool
    per_endpoint_tps: Dict[str, Any]
    subaccount_ids: List[int]
    wallet: str
    websocket_matching_tps: int
    websocket_non_matching_tps: int
    websocket_option_tps: int
    websocket_perp_tps: int
    referral_code: Optional[str] = None


@dataclass
class PublicGetAllInstrumentsResultSchema:
    instruments: List[InstrumentPublicResponseSchema]
    pagination: PaginationInfoSchema


@dataclass
class PublicGetTickerResultSchema:
    amount_step: Decimal
    base_asset_address: str
    base_asset_sub_id: str
    base_currency: str
    base_fee: Decimal
    best_ask_amount: Decimal
    best_ask_price: Decimal
    best_bid_amount: Decimal
    best_bid_price: Decimal
    erc20_details: Optional[ERC20PublicDetailsSchema]
    fifo_min_allocation: Decimal
    five_percent_ask_depth: Decimal
    five_percent_bid_depth: Decimal
    index_price: Decimal
    instrument_name: str
    instrument_type: InstrumentType
    is_active: bool
    maker_fee_rate: Decimal
    mark_price: Decimal
    max_price: Decimal
    maximum_amount: Decimal
    min_price: Decimal
    minimum_amount: Decimal
    open_interest: Dict[str, List[OpenInterestStatsSchema]]
    option_details: Optional[OptionPublicDetailsSchema]
    option_pricing: Optional[OptionPricingSchema]
    perp_details: Optional[PerpPublicDetailsSchema]
    pro_rata_amount_step: Decimal
    pro_rata_fraction: Decimal
    quote_currency: str
    scheduled_activation: int
    scheduled_deactivation: int
    stats: AggregateTradingStatsSchema
    taker_fee_rate: Decimal
    tick_size: Decimal
    timestamp: int
    mark_price_fee_rate_cap: Optional[Decimal] = None


@dataclass
class PublicGetVaultShareResultSchema:
    pagination: PaginationInfoSchema
    vault_shares: List[VaultShareResponseSchema]


@dataclass
class PrivateGetCollateralsResultSchema:
    collaterals: List[CollateralResponseSchema]
    subaccount_id: int


@dataclass
class PrivateRegisterScopedSessionKeyResponseSchema:
    id: Union[str, int]
    result: PrivateRegisterScopedSessionKeyResultSchema


@dataclass
class PrivateExpiredAndCancelledHistoryResponseSchema:
    id: Union[str, int]
    result: PrivateExpiredAndCancelledHistoryResultSchema


@dataclass
class PrivateSessionKeysResultSchema:
    public_session_keys: List[SessionKeyResponseSchema]


@dataclass
class PrivateGetMmpConfigResponseSchema:
    id: Union[str, int]
    result: List[MMPConfigResultSchema]


@dataclass
class PrivateOrderResponseSchema:
    id: Union[str, int]
    result: PrivateOrderResultSchema


@dataclass
class PrivateGetSubaccountResponseSchema:
    id: Union[str, int]
    result: PrivateGetSubaccountResultSchema


@dataclass
class PublicGetInterestRateHistoryResultSchema:
    interest_rates: List[InterestRateHistoryResponseSchema]
    pagination: PaginationInfoSchema


@dataclass
class PublicGetLiquidationHistoryResultSchema:
    auctions: List[AuctionResultSchema]
    pagination: PaginationInfoSchema


@dataclass
class PublicDepositDebugResponseSchema:
    id: Union[str, int]
    result: PublicDepositDebugResultSchema


@dataclass
class PublicGetVaultBalancesResponseSchema:
    id: Union[str, int]
    result: List[VaultBalanceResponseSchema]


@dataclass
class PublicGetReferralPerformanceResultSchema:
    fee_share_percentage: Decimal
    referral_code: str
    rewards: Dict[str, Dict[str, Dict[str, ReferralPerformanceByInstrumentTypeSchema]]]
    stdrv_balance: Decimal
    total_fee_rewards: Decimal
    total_notional_volume: Decimal
    total_referred_fees: Decimal


@dataclass
class PrivateCancelQuoteResponseSchema:
    id: Union[str, int]
    result: PrivateCancelQuoteResultSchema


@dataclass
class PrivateGetQuotesResponseSchema:
    id: Union[str, int]
    result: PrivateGetQuotesResultSchema


@dataclass
class PublicExecuteQuoteDebugResponseSchema:
    id: Union[str, int]
    result: PublicExecuteQuoteDebugResultSchema


@dataclass
class PrivateGetOptionSettlementHistoryResultSchema:
    settlements: List[OptionSettlementResponseSchema]
    subaccount_id: int


@dataclass
class PrivateGetErc20TransferHistoryResultSchema:
    events: List[ERC20TransferSchema]


@dataclass
class PublicGetAllCurrenciesResponseSchema:
    id: Union[str, int]
    result: List[CurrencyDetailedResponseSchema]


@dataclass
class PrivateGetSubaccountValueHistoryResultSchema:
    subaccount_id: int
    subaccount_value_history: List[SubAccountValueHistoryResponseSchema]


@dataclass
class PublicSendQuoteDebugResponseSchema:
    id: Union[str, int]
    result: PublicSendQuoteDebugResultSchema


@dataclass
class PublicGetLiveIncidentsResultSchema:
    incidents: List[IncidentResponseSchema]


@dataclass
class PublicGetTransactionResponseSchema:
    id: Union[str, int]
    result: PublicGetTransactionResultSchema


@dataclass
class PrivateGetOrdersResponseSchema:
    id: Union[str, int]
    result: PrivateGetOrdersResultSchema


@dataclass
class PrivateGetInterestHistoryResultSchema:
    events: List[InterestPaymentSchema]


@dataclass
class PrivatePollQuotesResultSchema:
    pagination: PaginationInfoSchema
    quotes: List[QuoteResultPublicSchema]


@dataclass
class PrivateGetOrderResponseSchema:
    id: Union[str, int]
    result: PrivateGetOrderResultSchema


@dataclass
class PublicGetVaultStatisticsResponseSchema:
    id: Union[str, int]
    result: List[VaultStatisticsResponseSchema]


@dataclass
class PublicWithdrawDebugResponseSchema:
    id: Union[str, int]
    result: PublicWithdrawDebugResultSchema


@dataclass
class PublicGetFundingRateHistoryResultSchema:
    funding_rate_history: List[FundingRateSchema]


@dataclass
class PrivateRfqGetBestQuoteResponseSchema:
    id: Union[str, int]
    result: PrivateRfqGetBestQuoteResultSchema


@dataclass
class PublicGetOptionSettlementHistoryResponseSchema:
    id: Union[str, int]
    result: PublicGetOptionSettlementHistoryResultSchema


@dataclass
class PrivateLiquidateResponseSchema:
    id: Union[str, int]
    result: PrivateLiquidateResultSchema


@dataclass
class PrivateGetTradeHistoryResponseSchema:
    id: Union[str, int]
    result: PrivateGetTradeHistoryResultSchema


@dataclass
class ForwardFeedDataSchema:
    confidence: Decimal
    currency: str
    deadline: int
    expiry: int
    fwd_diff: Decimal
    signatures: OracleSignatureDataSchema
    spot_aggregate_latest: Decimal
    spot_aggregate_start: Decimal
    timestamp: int


@dataclass
class VolFeedDataSchema:
    confidence: Decimal
    currency: str
    deadline: int
    expiry: int
    signatures: OracleSignatureDataSchema
    timestamp: int
    vol_data: VolSVIParamDataSchema


@dataclass
class PrivateReplaceResultSchema:
    cancelled_order: OrderResponseSchema
    create_order_error: Optional[RPCErrorFormatSchema] = None
    order: Optional[OrderResponseSchema] = None
    trades: Optional[List[TradeResponseSchema]] = None


@dataclass
class PrivateCancelByInstrumentResponseSchema:
    id: Union[str, int]
    result: PrivateCancelByInstrumentResultSchema


@dataclass
class PublicDeregisterSessionKeyResponseSchema:
    id: Union[str, int]
    result: PublicDeregisterSessionKeyResultSchema


@dataclass
class PrivateWithdrawResponseSchema:
    id: Union[str, int]
    result: PrivateWithdrawResultSchema


@dataclass
class PrivateGetNotificationsResponseSchema:
    id: Union[str, int]
    result: PrivateGetNotificationsResultSchema


@dataclass
class PublicGetCurrencyResponseSchema:
    id: Union[str, int]
    result: PublicGetCurrencyResultSchema


@dataclass
class PrivateTransferPositionResponseSchema:
    id: Union[str, int]
    result: PrivateTransferPositionResultSchema


@dataclass
class PublicMarginWatchResponseSchema:
    id: Union[str, int]
    result: PublicMarginWatchResultSchema


@dataclass
class PublicGetSpotFeedHistoryCandlesResponseSchema:
    id: Union[str, int]
    result: PublicGetSpotFeedHistoryCandlesResultSchema


@dataclass
class PrivatePollRfqsResponseSchema:
    id: Union[str, int]
    result: PrivatePollRfqsResultSchema


@dataclass
class PrivateGetLiquidationHistoryResponseSchema:
    id: Union[str, int]
    result: List[AuctionResultSchema]


@dataclass
class PrivateOrderDebugResultSchema:
    action_hash: str
    encoded_data: str
    encoded_data_hashed: str
    raw_data: SignedTradeOrderSchema
    typed_data_hash: str


@dataclass
class PrivateTransferPositionsResponseSchema:
    id: Union[str, int]
    result: PrivateTransferPositionsResultSchema


@dataclass
class PublicGetSpotFeedHistoryResponseSchema:
    id: Union[str, int]
    result: PublicGetSpotFeedHistoryResultSchema


@dataclass
class PrivateGetDepositHistoryResponseSchema:
    id: Union[str, int]
    result: PrivateGetDepositHistoryResultSchema


@dataclass
class PublicGetInstrumentResponseSchema:
    id: Union[str, int]
    result: PublicGetInstrumentResultSchema


@dataclass
class PrivateGetPositionsResponseSchema:
    id: Union[str, int]
    result: PrivateGetPositionsResultSchema


@dataclass
class PublicGetTradeHistoryResponseSchema:
    id: Union[str, int]
    result: PublicGetTradeHistoryResultSchema


@dataclass
class PrivateGetRfqsResponseSchema:
    id: Union[str, int]
    result: PrivateGetRfqsResultSchema


@dataclass
class PrivateGetWithdrawalHistoryResponseSchema:
    id: Union[str, int]
    result: PrivateGetWithdrawalHistoryResultSchema


@dataclass
class PublicGetOptionSettlementPricesResponseSchema:
    id: Union[str, int]
    result: PublicGetOptionSettlementPricesResultSchema


@dataclass
class PublicGetMakerProgramScoresResponseSchema:
    id: Union[str, int]
    result: PublicGetMakerProgramScoresResultSchema


@dataclass
class PrivateGetFundingHistoryResponseSchema:
    id: Union[str, int]
    result: PrivateGetFundingHistoryResultSchema


@dataclass
class PrivateGetAccountResponseSchema:
    id: Union[str, int]
    result: PrivateGetAccountResultSchema


@dataclass
class PublicGetAllInstrumentsResponseSchema:
    id: Union[str, int]
    result: PublicGetAllInstrumentsResultSchema


@dataclass
class PublicGetTickerResponseSchema:
    id: Union[str, int]
    result: PublicGetTickerResultSchema


@dataclass
class PublicGetVaultShareResponseSchema:
    id: Union[str, int]
    result: PublicGetVaultShareResultSchema


@dataclass
class PrivateGetCollateralsResponseSchema:
    id: Union[str, int]
    result: PrivateGetCollateralsResultSchema


@dataclass
class PrivateSessionKeysResponseSchema:
    id: Union[str, int]
    result: PrivateSessionKeysResultSchema


@dataclass
class PublicGetInterestRateHistoryResponseSchema:
    id: Union[str, int]
    result: PublicGetInterestRateHistoryResultSchema


@dataclass
class PublicGetLiquidationHistoryResponseSchema:
    id: Union[str, int]
    result: PublicGetLiquidationHistoryResultSchema


@dataclass
class PublicGetReferralPerformanceResponseSchema:
    id: Union[str, int]
    result: PublicGetReferralPerformanceResultSchema


@dataclass
class PrivateGetOptionSettlementHistoryResponseSchema:
    id: Union[str, int]
    result: PrivateGetOptionSettlementHistoryResultSchema


@dataclass
class PrivateGetErc20TransferHistoryResponseSchema:
    id: Union[str, int]
    result: PrivateGetErc20TransferHistoryResultSchema


@dataclass
class PrivateGetSubaccountValueHistoryResponseSchema:
    id: Union[str, int]
    result: PrivateGetSubaccountValueHistoryResultSchema


@dataclass
class PublicGetLiveIncidentsResponseSchema:
    id: Union[str, int]
    result: PublicGetLiveIncidentsResultSchema


@dataclass
class PrivateGetInterestHistoryResponseSchema:
    id: Union[str, int]
    result: PrivateGetInterestHistoryResultSchema


@dataclass
class PrivatePollQuotesResponseSchema:
    id: Union[str, int]
    result: PrivatePollQuotesResultSchema


@dataclass
class PublicGetFundingRateHistoryResponseSchema:
    id: Union[str, int]
    result: PublicGetFundingRateHistoryResultSchema


@dataclass
class PublicGetLatestSignedFeedsResultSchema:
    fwd_data: Dict[str, Dict[str, ForwardFeedDataSchema]]
    perp_data: Dict[str, Dict[str, PerpFeedDataSchema]]
    rate_data: Dict[str, Dict[str, RateFeedDataSchema]]
    spot_data: Dict[str, SpotFeedDataSchema]
    vol_data: Dict[str, Dict[str, VolFeedDataSchema]]


@dataclass
class PrivateReplaceResponseSchema:
    id: Union[str, int]
    result: PrivateReplaceResultSchema


@dataclass
class PrivateOrderDebugResponseSchema:
    id: Union[str, int]
    result: PrivateOrderDebugResultSchema


@dataclass
class PublicGetLatestSignedFeedsResponseSchema:
    id: Union[str, int]
    result: PublicGetLatestSignedFeedsResultSchema
